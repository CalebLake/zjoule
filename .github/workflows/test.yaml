name: Get Latest Release Version
on: [push, repository_dispatch]

permissions:
  contents: write

jobs:
  update-website:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get the latest release tag
        id: get_release
        run: |
          LATEST_TAG=$(gh release view --json tagName -q ".tagName")
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Print the latest tag
        run: echo "The latest release tag is $LATEST_TAG"

      - name: Configure Git
        run: |
          git config --global user.name "nefarious-developer[bot]"
          git config --global user.email "nefarious-developer[bot]@noreply.github.com"

      - name: Create a GitHub App token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.NEFARIOUS_BOT }}
          private-key: ${{ secrets.NEFARIOUS_BOT_PRIVATE_KEY }}

      - name: Clone the target repository
        env:
          BOT_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git clone https://x-access-token:${BOT_TOKEN}@github.com/The-Nefarious-Developer/zjoule-website.git website-repo

      - name: Create a new branch
        working-directory: website-repo
        run: |
          git checkout -b update-to-$LATEST_TAG

      - name: Run the script to update the website
        working-directory: website-repo
        run: |
          chmod +x ../scripts/update-website.sh
          ../scripts/update-website.sh $LATEST_TAG

      - name: Commit the changes
        working-directory: website-repo
        run: |
          git add .
          git commit -m "feat: update to $LATEST_TAG"
      
      - name: Push the changes
        working-directory: website-repo
        run: |
          git push origin update-to-$LATEST_TAG