name: Build, Test and Deploy

on:
  push

jobs:

  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven Wrapper
        run: ./mvnw clean verify

  # prepare-release:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up JDK 21
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '21'
  #         distribution: 'temurin'
  #         cache: maven

  #     - name: Build with Maven Wrapper
  #       run: ./mvnw clean package

  # release:
  #   needs: prepare-release
  #   runs-on: ubuntu-latest
  #   # if: github.ref == 'refs/heads/main'
  #   steps:

  #     - name: Download updatesite
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: updatesite

  # javadoc:
  #   needs: release
  #   runs-on: ubuntu-latest
  #   # if: github.ref == 'refs/heads/main'
  #   steps:

  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up JDK 21
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: '21'
  #         distribution: 'temurin'
  #         cache: maven

  #     - name: Generate Javadoc
  #       run: |
  #         ./mvnw javadoc:javadoc \
  #         -pl com.developer.nefarious.zjoule.plugin
      
  #     - name: Upload JavaDoc
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: documentation
  #         path: com.developer.nefarious.zjoule.plugin/target/reports/apidocs/

  # publish:
  #   needs: javadoc
  #   runs-on: ubuntu-latest
  #   # if: github.ref == 'refs/heads/main'
  #   permissions:
  #     contents: write
  #   steps:
    
  #     - name: Download JavaDoc
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: documentation

  #     # - name: Deploy to GitHub Pages
  #     #   uses: peaceiris/actions-gh-pages@v4
  #     #   with:
  #     #     github_token: ${{ secrets.GITHUB_TOKEN }}
  #     #     publish_dir: .
  #     #     publish_dir: ./public